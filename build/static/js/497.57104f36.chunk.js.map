{"version":3,"file":"static/js/497.57104f36.chunk.js","mappings":"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","sources":["app/admin/usermanager.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { MaterialReactTable } from \"material-react-table\";\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Stack, TextField, Tooltip, createTheme, ThemeProvider, useTheme, Input, } from \"@mui/material\";\nimport { Delete, Edit, Search } from \"@mui/icons-material\";\nimport \"./style.css\";\nimport { useSelector } from 'react-redux'\nimport \"react-notifications/lib/notifications.css\"\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport PhoneInput from \"react-phone-input-2\";\nimport \"./phonestyle.css\";\nimport countryList from 'react-select-country-list'\nimport Select from 'react-select'\nimport { message } from \"antd\";\n\n\n\nconst UserManager = () => {\n\n  const { Rperiod } = useSelector((state) => state.InputValue);\n\n  const inputStyles = {\n    borderBottom: \"2px solid #c8cce3\",\n    color: \"#c8cce3\",\n    \"::placeholder\": {\n      color: \"#c8cce3\",\n    },\n  };\n  const placeholderStyle = {\n    color: \"white\",\n\n  };\n\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [editmodal, setEditmodal] = useState(false);\n\n  const [tableData, setTableData] = useState([]);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [searchword, setSearchword] = useState(\"\");\n  const [rowdata, setRowdata] = useState([]);\n\n  useEffect(() => {\n    GetAllUsers();\n  }, []);\n\n  const GetAllUsers = () => {\n    axios.post(\"/api/users/getallusers\").then((res) => {\n      setTableData(res.data);\n      for (var i = 0; i < res.data.length; i++) {\n        if (res.data[i].request) {\n          NotificationManager.info(`User ${res.data[i].username} has requested to use it for ${res.data[i].request} days`, 'News');\n        }\n      }\n    });\n  };\n\n  const handleCreateNewRow = (values) => {\n    axios.post(\"/api/users/AddUser\", values).then((res) => {\n      if (res.data === \"User's email already exists!\") {\n        NotificationManager.warning(res.data, 'Failure');\n      }\n      else if (res.data === \"Username already exists!\") {\n        NotificationManager.warning(res.data, 'Failure');\n      }\n      else {\n        NotificationManager.success(res.data, 'success');\n      }\n      // console.log(res.data);\n      GetAllUsers();\n      // setTableData(res.data);\n    });\n  };\n\n  const handleSaveRowEdits = async (data) => {\n    // console.log(data);\n    axios.post(\"/api/users/updateuser\", data).then((res) => {\n      // console.log(res.data);\n      setTableData(res.data);\n    });\n  };\n  const handleCancelRowEdits = () => {\n    setValidationErrors({});\n  };\n\n  //Delete row\n\n  const handleDeleteRow = useCallback(\n    (row) => {\n      if (\n        window.confirm(\n          `Are you sure you want to delete ${row.getValue(\"username\")}`\n        )\n      ) {\n        // console.log(row.original);\n        axios.post(\"/api/users/deleteuser\", row.original).then((res) => {\n          // console.log(res.data);\n          setTableData(res.data);\n        });\n        return;\n      }\n      //send api delete request here, then refetch or update local table data for re-render\n\n      // tableData.splice(row.index, 1);\n      // setTableData([...tableData]);\n    },\n    [tableData]\n  );\n\n  const getCommonEditTextFieldProps = useCallback(\n    (cell) => {\n      return {\n        error: !!validationErrors[cell.id],\n        helperText: validationErrors[cell.id],\n        onBlur: (event) => {\n          const isValid =\n            cell.column.id === \"email\"\n              ? validateEmail(event.target.value)\n              : cell.column.id === \"age\"\n                ? validateAge(+event.target.value)\n                : validateRequired(event.target.value);\n          if (!isValid) {\n            //set validation error for cell if invalid\n            setValidationErrors({\n              ...validationErrors,\n              [cell.id]: `${cell.column.columnDef.header} is required`,\n            });\n          } else {\n            //remove validation error for cell if valid\n            delete validationErrors[cell.id];\n            setValidationErrors({\n              ...validationErrors,\n            });\n          }\n        },\n      };\n    },\n    [validationErrors]\n  );\n\n  const globalTheme = useTheme();\n\n  const tableTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: globalTheme.palette.secondary,\n      background: {\n        default: \"#27283a\"\n      }\n    },\n  });\n\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: \"_id\",\n        header: \"ID\",\n        enableColumnOrdering: false,\n        enableEditing: false, //disable editing on this column\n        enableSorting: false,\n        size: 80,\n      },\n      {\n        accessorKey: \"username\",\n        header: \"UserName\",\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n        }),\n      },\n      {\n        accessorKey: \"firstName\",\n        header: \"First Name\",\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n        }),\n      },\n      {\n        accessorKey: \"lastname\",\n        header: \"Last Name\",\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n        }),\n      },\n      {\n        accessorKey: \"password\",\n        header: \"Password\",\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n        }),\n      },\n      {\n        accessorKey: \"email\",\n        header: \"Email\",\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: \"email\",\n        }),\n      },\n      {\n        accessorKey: \"Phone\",\n        header: \"Phone\",\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: \"number\",\n        }),\n      },\n      {\n        accessorKey: \"country\",\n        header: \"Country\",\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n        }),\n      },\n      {\n        accessorKey: \"period\",\n        header: \"Period\",\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: \"number\",\n        }),\n      },\n      {\n        accessorKey: \"registerTime\",\n        header: \"Register_Time\",\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: \"number\",\n        }),\n      },\n      {\n        accessorKey: \"request\",\n        header: \"Request\",\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: \"number\",\n        }),\n      },\n    ],\n    [getCommonEditTextFieldProps]\n  );\n\n  const handleSearchSubmit = (name) => (e) => {\n    if (name === \"Search\" || e.key === \"Enter\") {\n      // console.log(searchword);\n      var searchitem = {\n        searchword: searchword,\n      };\n      // console.log(searchword);\n      if (searchword) {\n        axios.post(\"/api/users/searchuser\", searchitem).then((res) => {\n          // console.log(res.data);\n          setTableData(res.data);\n        });\n      } else {\n        axios.post(\"/api/users/getallusers\").then((res) => {\n          setTableData(res.data);\n        });\n      }\n    }\n  };\n\n  const handleEditing = (row) => () => {\n    // console.log(row._valuesCache);\n    setRowdata(row._valuesCache);\n    setEditmodal(true);\n  };\n\n  return (\n    <div className=\"custom-table\">\n      <NotificationContainer />\n      <ThemeProvider theme={tableTheme}>\n        <MaterialReactTable\n          displayColumnDefOptions={{\n            \"mrt-row-actions\": {\n              muiTableHeadCellProps: {\n                align: \"center\",\n              },\n              size: 120,\n            },\n          }}\n          // enableFilterMatchHighlighting={true}\n          // enableFullScreenToggle={false}\n          // enableHiding={false}\n          enableFilters={false}\n          // enableDensityToggle={false}\n          columns={columns}\n          data={tableData}\n          editingMode=\"modal\" //default\n          enableColumnOrdering={false}\n          enableEditing\n          // onEditingRowSave={handleSaveRowEdits}\n          // onEditingRowCancel={handleCancelRowEdits}\n          renderRowActions={({ row, table }) => (\n            <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n              <Tooltip arrow placement=\"left\" title=\"Edit\">\n                <IconButton\n                  onClick={handleEditing(row)}\n                  style={{ color: \"#c8cce3\" }}\n                >\n                  <Edit />\n                </IconButton>\n              </Tooltip>\n              <Tooltip arrow>\n                <IconButton\n                  color=\"error\"\n                  onClick={() => handleDeleteRow(row)}\n                  style={{ color: \"#c8cce3\" }}\n                >\n                  <Delete />\n                </IconButton>\n              </Tooltip>\n            </Box>\n          )}\n          renderTopToolbarCustomActions={() => (\n            <div style={{ display: \"flex\" }}>\n              <Button\n                style={{ backgroundColor: \"#8b8fa3\", marginRight: \"65px\" }}\n                onClick={() => setCreateModalOpen(true)}\n                variant=\"contained\"\n              >\n                Create\n              </Button>\n              <Input\n                // style={{ backgroundColor: \"#8b8fa3\", float: \"right\" }}\n                value={searchword}\n                onChange={(e) => setSearchword(e.target.value)}\n                onKeyPressCapture={handleSearchSubmit(\"\")}\n                placeholder=\"Search here....\"\n                inputProps={{ style: inputStyles }}\n                InputProps={{ disableUnderline: true }}\n              />\n              <IconButton\n                onClick={handleSearchSubmit(\"Search\")}\n                style={{\n                  position: \"absolute\",\n                  left: \"325px\",\n                  top: \"8px\",\n                  color: \"#8b8fa3\",\n                }}\n              >\n                <Search />\n              </IconButton>\n            </div>\n          )}\n        />\n      </ThemeProvider>\n      <CreateNewAccountModal\n        columns={columns}\n        open={createModalOpen}\n        onClose={() => setCreateModalOpen(false)}\n        onSubmit={handleCreateNewRow}\n        placeholderStyle={placeholderStyle}\n      />\n      <EditingModal\n        columns={columns}\n        open={editmodal}\n        onClose={() => setEditmodal(false)}\n        onSubmit={handleSaveRowEdits}\n        rowdata={rowdata}\n        setRowdata={setRowdata}\n        placeholderStyle={placeholderStyle}\n      />\n    </div>\n  );\n};\n\nexport const CreateNewAccountModal = ({\n  open,\n  columns,\n  placeholderStyle,\n  onClose,\n  onSubmit,\n}) => {\n  const darkTheme = {\n    container: (provided) => ({\n      ...provided,\n      backgroundColor: '#232333',\n    }),\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: '#232333',\n      borderColor: '#232333',\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isFocused ? '#555' : '#232333',\n      color: state.isFocused ? '#fff' : '#ccc',\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: '#fff',\n    }),\n  }\n  const [value, setValue] = useState('');\n  const options = useMemo(() => countryList().getData(), []);\n  const [messageApi, contextHolder] = message.useMessage();\n  const [values, setValues] = useState(() =>\n    columns.reduce((acc, column) => {\n      acc[column.accessorKey ?? \"\"] = \"\";\n      return acc;\n    }, {})\n  );\n  const handleSubmit = () => {\n    // console.log(values);\n    if (!values.username || values.username === \"\" || values.username === undefined)\n      NotificationManager.warning(\"Invaild Username!\", 'Failure');\n    else if (!values.firstName || values.firstName === \"\" || values.firstName === undefined)\n      NotificationManager.warning(\"Invaild First Name!\", 'Failure');\n    else if (!values.lastname || values.lastname === \"\" || values.lastname === undefined)\n      NotificationManager.warning(\"Invaild Last Name!\", 'Failure');\n    else if (!values.password || values.password === \"\" || values.password === undefined)\n      NotificationManager.warning(\"Invaild Password!\", 'Failure');\n    else if (!values.email || values.email === \"\" || values.email === undefined)\n      NotificationManager.warning(\"Invaild Email!\", 'Failure');\n    else if (!values.Phone || values.Phone === \"\" || values.Phone === undefined)\n      NotificationManager.warning(\"Invaild PhoneNumber!\", 'Failure');\n    else if (!values.country || values.country === \"\" || values.country === undefined)\n      NotificationManager.warning(\"Invaild Country!\", 'Failure');\n    return;\n    onSubmit(values);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} PaperProps={{ style: { borderRadius: '10px' } }}>\n      <NotificationContainer />\n      <DialogTitle textAlign=\"center\" style={{ background: \"#27283a\", color: \"white\" }}>\n        Create New Account\n      </DialogTitle>\n      <DialogContent style={{ background: \"#27283a\" }}>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <Stack\n            sx={{\n              width: \"100%\",\n              minWidth: { xs: \"300px\", sm: \"360px\", md: \"400px\" },\n              gap: \"1.5rem\",\n            }}\n          >\n            {columns.map((column) =>\n              column.accessorKey === \"_id\" ||\n                column.accessorKey === \"request\" ||\n                column.accessorKey === \"period\" ? null : (\n                column.accessorKey === \"Phone\" ? (\n                  <PhoneInput\n                    specialLabel={\"\"}\n                    country={\"us\"}\n                    name={column.accessorKey}\n                    onChange={(phone) =>\n                      setValues({ ...values, [column.accessorKey]: phone })\n                    }\n                  />\n                ) : (\n                  column.accessorKey === \"country\" ? (\n                    <Select\n                      styles={darkTheme}\n                      name={column.accessorKey}\n                      options={options}\n                      value={value}\n                      onChange={(selectedOption) => {\n                        setValue(selectedOption);\n                        setValues({ ...values, [column.accessorKey]: selectedOption.label });\n                      }}\n                    />\n                  ) : (\n                    column.accessorKey === \"registerTime\" ? null : (\n                      <TextField\n                        key={column.accessorKey}\n                        placeholder={column.header}\n                        name={column.accessorKey}\n                        inputProps={{ style: placeholderStyle }}\n                        onChange={(e) =>\n                          setValues({ ...values, [e.target.name]: e.target.value })\n                        }\n                      />\n                    )\n                  )\n                )\n              )\n            )}\n          </Stack>\n        </form>\n      </DialogContent>\n      <DialogActions sx={{ p: \"1.25rem\" }} style={{ background: \"#27283a\" }}>\n        <Button\n          onClick={onClose}\n          style={{ color: \"#27283a\", backgroundColor: \"#8b8fa3\" }}\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n        <Button\n          style={{ backgroundColor: \"#8b8fa3\" }}\n          onClick={handleSubmit}\n          variant=\"contained\"\n        >\n          Create New Account\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const EditingModal = ({\n  open,\n  columns,\n  placeholderStyle,\n  rowdata,\n  setRowdata,\n  onClose,\n  onSubmit,\n}) => {\n  // console.log(rowdata);\n  const handleSubmit = () => {\n    onSubmit(rowdata);\n    NotificationManager.success(\"Exactly updated\", 'Success');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} PaperProps={{ style: { borderRadius: '10px' } }}>\n      <DialogTitle textAlign=\"center\" style={{ background: \"#27283a\", color: \"white\" }}>\n        Edit\n      </DialogTitle>\n      <DialogContent style={{ background: \"#27283a\" }}>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <Stack\n            sx={{\n              width: \"100%\",\n              minWidth: { xs: \"300px\", sm: \"360px\", md: \"400px\" },\n              gap: \"1.5rem\",\n            }}\n          >\n            <TextField\n              name=\"firstName\"\n              value={rowdata.firstName}\n              placeholder=\"First Name\"\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n            <TextField\n              name=\"lastname\"\n              value={rowdata.lastname}\n              placeholder=\"Last Name\"\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n            <TextField\n              name=\"email\"\n              value={rowdata.email}\n              placeholder=\"Email\"\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n            <TextField\n              name=\"Phone\"\n              value={rowdata.Phone}\n              placeholder=\"Phone\"\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n            <TextField\n              name=\"country\"\n              value={rowdata.country}\n              placeholder=\"Country\"\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n            <TextField\n              name=\"period\"\n              value={rowdata.period}\n              placeholder=\"Period\"\n              style={{ color: 'white !important', webkitTextFillColor: 'white !important' }}\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n\n            <TextField\n              name=\"request\"\n              disabled\n              placeholder=\"Request\"\n              value={rowdata.request}\n              inputProps={{ style: placeholderStyle }}\n              onChange={(e) =>\n                setRowdata({ ...rowdata, [e.target.name]: e.target.value })\n              }\n            // style={{ border: \"1px #a5aac7 solid\" }}\n            />\n          </Stack>\n        </form>\n      </DialogContent>\n      <DialogActions sx={{ p: \"1.25rem\" }} style={{ background: \"#27283a\" }}>\n        <Button\n          onClick={onClose}\n          style={{ color: \"#27283a\", backgroundColor: \"#8b8fa3\" }}\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n        <Button\n          style={{ backgroundColor: \"#8b8fa3\" }}\n          onClick={handleSubmit}\n          variant=\"contained\"\n        >\n          Update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst validateRequired = (value) => !!value.length;\nconst validateEmail = (email) =>\n  !!email.length &&\n  email\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\nconst validateAge = (age) => age >= 18 && age <= 50;\n\nexport default UserManager;"],"names":["CreateNewAccountModal","_ref12","open","columns","placeholderStyle","onClose","onSubmit","darkTheme","container","provided","backgroundColor","control","borderColor","option","state","isFocused","color","singleValue","value","setValue","useState","options","useMemo","countryList","getData","messageApi","contextHolder","message","useMessage","values","setValues","reduce","acc","column","_column$accessorKey","accessorKey","_jsxs","Dialog","PaperProps","style","borderRadius","children","_jsx","NotificationContainer","DialogTitle","textAlign","background","DialogContent","e","preventDefault","Stack","sx","width","minWidth","xs","sm","md","gap","map","PhoneInput","specialLabel","country","name","onChange","phone","Select","styles","selectedOption","label","TextField","placeholder","header","inputProps","target","DialogActions","p","Button","onClick","variant","handleSubmit","username","undefined","firstName","lastname","password","email","Phone","NotificationManager","warning","EditingModal","_ref13","rowdata","setRowdata","period","webkitTextFillColor","disabled","request","success","validateRequired","length","validateEmail","toLowerCase","match","validateAge","age","UserManager","Rperiod","useSelector","InputValue","inputStyles","borderBottom","createModalOpen","setCreateModalOpen","editmodal","setEditmodal","tableData","setTableData","validationErrors","setValidationErrors","searchword","setSearchword","useEffect","GetAllUsers","axios","post","then","res","data","i","info","handleDeleteRow","useCallback","row","window","confirm","getValue","original","getCommonEditTextFieldProps","cell","error","id","helperText","onBlur","event","columnDef","globalTheme","useTheme","tableTheme","createTheme","palette","mode","primary","secondary","default","enableColumnOrdering","enableEditing","enableSorting","size","muiTableBodyCellEditTextFieldProps","_ref","_ref2","_ref3","_ref4","_ref5","type","_ref6","_ref7","_ref8","_ref9","_ref10","handleSearchSubmit","key","searchitem","handleEditing","_valuesCache","className","ThemeProvider","theme","MaterialReactTable","displayColumnDefOptions","muiTableHeadCellProps","align","enableFilters","editingMode","renderRowActions","_ref11","table","Box","display","Tooltip","arrow","placement","title","IconButton","Edit","Delete","renderTopToolbarCustomActions","marginRight","Input","onKeyPressCapture","InputProps","disableUnderline","position","left","top","Search","async"],"sourceRoot":""}